version: 1.0.{build}
clone_depth: 15
os: 
    - Visual Studio 2015 RC
environment:
    matrix:
        - BOND_LANG: cs
        - BOND_LANG: cpp
install:
    - cmd: git submodule update --init
    - ps: >-
        if ($env:APPVEYOR_REPO_BRANCH -ne "fsharp") {

            if (Test-Path compiler\.cabal-sandbox) {

                $env:SandboxCache = "restored"

            }

            if ($env:BOND_LANG -eq "cpp") {
                
                if (!(Test-Path boost_1_57_0.7z)) {

                    echo "Downloading Boost 1.57 ..."

                    appveyor DownloadFile "http://softlayer-dal.dl.sourceforge.net/project/boost/boost/1.57.0/boost_1_57_0.7z" -Timeout 1200000

                }

                echo "Extracting Boost..."

                7z x boost_1_57_0.7z -y -o"${env:APPVEYOR_BUILD_FOLDER}" boost_1_57_0\boost > $null

                $env:BOOST_ROOT = "${env:APPVEYOR_BUILD_FOLDER}\boost_1_57_0"
        
            }

            choco install haskellplatform -version 2014.2.0.0 -y

            # Haskell Platfrom package doesn't update PATH for the current shell instance

            $env:Path += ";${env:ProgramFiles}\Haskell Platform\2014.2.0.0\bin"

            $env:Path += ";${env:ProgramFiles}\Haskell Platform\2014.2.0.0\lib\extralibs\bin"

            $env:Path += ";${env:ProgramFiles}\Haskell Platform\2014.2.0.0\mingw\bin"

            cabal update

        }
cache:
    - cs\packages -> cs\test\core\packages.config
    - compiler\.cabal-sandbox -> compiler\bond.cabal
    - boost_1_57_0.7z
build_script:
    - ps: >-
        if ($env:APPVEYOR_REPO_BRANCH -ne "fsharp") {

            if ($env:BOND_LANG -eq "cs") {

                nuget restore cs\cs.sln

                # default codegen with properties

                msbuild cs\cs.sln /verbosity:minimal /p:Configuration=Debug /logger:"C:\Program Files\AppVeyor\BuildAgent\Appveyor.MSBuildLogger.dll"

                if (-not $?) { throw "build failed" }

                # codegen with public fields and interfaces used to represent collections

                msbuild cs\cs.sln /verbosity:minimal /p:Configuration=Fields /logger:"C:\Program Files\AppVeyor\BuildAgent\Appveyor.MSBuildLogger.dll"

                if (-not $?) { throw "build failed" }
                
            }
            
            
            if ($env:BOND_LANG -eq "cpp") {
                
                mkdir build

                cd build

                cmake -G "Visual Studio 14 2015 Win64" ..

                $env:PreferredToolArchitecture = "x64"

                cmake --build . -- /verbosity:minimal /logger:"C:\Program Files\AppVeyor\BuildAgent\Appveyor.MSBuildLogger.dll"

                if (-not $?) { throw "build failed" }

                cd ..

            }

        } else {

            nuget restore fsharp\fsharp.sln

            msbuild fsharp\fsharp.sln /verbosity:minimal /p:Configuration=Debug /logger:"C:\Program Files\AppVeyor\BuildAgent\Appveyor.MSBuildLogger.dll"

        }
test_script:
    - ps: >-
        $ErrorActionPreference = "Stop"

        if ($env:APPVEYOR_REPO_BRANCH -ne "fsharp") {

            if ($env:BOND_LANG -eq "cs") {

                if ($env:SandboxCache -ne "restored") {

                    nunit-console-x86 /framework:net-4.5 /labels cs\test\core\bin\debug\net45\Properties\Bond.UnitTest.dll cs\test\internal\bin\debug\net45\Bond.InternalTest.dll

                } else {

                    nunit-console-x86 /framework:net-4.0 /labels cs\test\core\bin\debug\net40\Properties\Bond.UnitTest.dll cs\test\core\bin\debug\net40\Fields\Bond.UnitTest.dll cs\test\internal\bin\debug\net40\Bond.InternalTest.dll

                    nunit-console-x86 /framework:net-4.5 /labels cs\test\core\bin\debug\net45\Properties\Bond.UnitTest.dll cs\test\core\bin\debug\net45\Fields\Bond.UnitTest.dll cs\test\internal\bin\debug\net45\Bond.InternalTest.dll
                }

            }

        } else {

            vstest.console /logger:Appveyor fsharp\test\TypeProvider\bin\Debug\BondFsharpUnitTest.dll

        }
